insert a node at the end of a circular linked list
//
struct node*newnode=createnode(data);
struct node*inseetatend(struct node*last)
{if(last==NULL)
{ last=newnode;
    return last;}
else
{
    
    newnode->next=lastnode->next;
    newnode=lastnode->next;
    last=newnode;
    return last;
}
}
//
insert a node at a particular position in a cirular linked list
//
struct node*newnode=createnode(data);
struct node*insertatpos(struct node*last,int pos)
{if(last==NULL)
    {
        if(pos!=1)
        {printf"inappropriate";}
        else
        {
         last=newnode;
         last->next=last;
        }
    }
    struct node*cur=last->next;
    if(pos==1)
    {newnode->next=last->next;
        last->next=newnode;
        return last;
    }
    for(i=0;i<pos-1;i++)
    {
        cur=cur->next;
    if(cur==last->next)
    {printf("pos is in appropriate");
    return last;}
    }
    newnode->next=cur->next;
    cur->next=newnode;
    if(cur==last)
    {last=newnode;}
    return last;
}
//
to delete a node at beginning of a circular linked list
//
struct node*delatbegin(struct node*last)
    {
        if(last==NULL)
        {printf("the list i s inapprropriate");
            return NULL;
        }
    struct node*head=last->next;
    if(head==last)
   { free(head);
    last=NULL;
    return last;
    }
    else
    {head->next=last->next;
        free(head);
        return last;
    }
}
//    